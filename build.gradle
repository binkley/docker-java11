buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE"
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.21.0"
    id "com.dorongold.task-tree" version "1.3.1"
    id "java"
    id "org.springframework.boot" version "2.1.3.RELEASE"
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
}

group = "my.example"
version = "0-SNAPSHOT"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
}

sourceCompatibility = 11
targetCompatibility = 11

ext {
    javaVersion = '11.0.2'  // Used by docker task
}

defaultTasks "build"

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            "-encoding", "UTF8",
            "-parameters",
            "-Werror",
            "-Xdiags:verbose",
            "-Xlint:all,-processing,-serial"
    ]
}

tasks {
    wrapper {
        distributionType = Wrapper.DistributionType.ALL
        gradleVersion = '5.2.1'
    }

    clean {
        delete "out"
    }

    bootRun {
        // Pass `-Dfoo=bar` flags through to Spring Boot for convenience
        systemProperties = System.properties as Map<String, ?>
    }

    springBoot {
        buildInfo()
    }
}

task dockerBuild(type: Exec) {
    group = 'Build'
    description = 'Assembles and tests this project as a local Docker image.'
    commandLine 'docker', 'build', '.',
            '--tag', 'tmp',
            '--build-arg', "GRADLE_VERSION=${tasks.wrapper.gradleVersion}",
            '--build-arg', "JAVA_VERSIOn=${project.ext['javaVersion']}"
}

task dockerRun(type: Exec) {
    group = 'Application'
    description = 'Runs this project as a local Docker image.'
    dependsOn dockerBuild
    commandLine 'docker', 'run',
            '-it', 'tmp',
            '--name', 'tmp',
            '--publish', '8080:8080/tcp'
}
